// Copyright(C) 2022 Baidu Inc. All Rights Reserved.
// Code Generated By 'gdp' At 2022-06-22, You Can EDIT.
// App Using GDP Framework: http://gdp.baidu-int.com/ .

package httpserver

import (
	"api-gateway/httpserver/middleware"

	apimanage "api-gateway/httpserver/controller/apiManage"
	clientrouter "api-gateway/httpserver/controller/clientRouter"
	"api-gateway/httpserver/controller/common"
	"api-gateway/httpserver/controller/upstreamServer"

	"github.com/gin-gonic/gin"
)

// httpRouter 获取web路由
//
// HTTP Server 和 Router 的文档：
// http://gdp.baidu-int.com/gdp2/docs/examples/server/20_http_server/
func httpRouter() *gin.Engine {
	router := gin.New()

	// 日志中间件
	router.Use(middleware.NewAccessLogMiddleware())

	// defer recover 错误处理
	router.Use(middleware.NewDeferErrorMiddleware())

	// 跨域支持
	router.Use(middleware.NewCorsMiddleware())

	// register(router)
	routerRegister(router)

	return router
}

func routerRegister(r *gin.Engine) {

	apiGroup := r.Group("/api")
	apiGroup.Use()
	{
		apiCommonGroup := apiGroup.Group("/common")
		apiCommonGroup.GET("/probe", common.Probe)
	}

	// server 的注册接口
	serverGroup := apiGroup.Group("/server")
	{
		serverGroup.POST("/register", upstreamServer.Register) // 注册server
		serverGroup.POST("/search", upstreamServer.Search)     // 查询
		serverGroup.POST("/update", upstreamServer.Update)     // 更新
	}
	// router 的注册接口
	routerGroup := apiGroup.Group("/router")
	{
		routerGroup.POST("/register", clientrouter.Register) // 注册router
		routerGroup.POST("/search", clientrouter.Search)     // 查询
		routerGroup.POST("/update", clientrouter.Update)     // 更新
	}
	// 运行router
	proxyGroup := apiGroup.Group("/proxy")
	{
		proxyGroup.Any("/*path", apimanage.Run)
	}

	// 插件
}
